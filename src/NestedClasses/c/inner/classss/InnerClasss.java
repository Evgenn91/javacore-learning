package NestedClasses.c.inner.classss;

/**
 * внутренний класс
 * внутренний класс привязан к внешнему(тоесть чтобы его создань, его необходимо определить у уже созданного внешнего класса)
 * создание происходит след образом:
 *   - объект.new NameInnerClass(); - создаем в любом месте
 *     или так:
 *   - new ВнешнКласс().new NameInnerClass(); - но тут у нас не будет ссылки на внетренний класс!!!
 *   - this.new NameInnerClass(); - если создаем в внешнем классе(например в конструкторе внешн класса)
 *
 * внутр класс можно сделать private (будет видет только в своем внешнем классе)
 * может содержать только non-staitc элементы!!! (но если переменная будет с 2мя словами: static и final то тогда можно)
 * может обращаться даже к private элементам внешнего класса
 * внешний класс может обращаться к private элементам внутреннего класса, прежде создав его объект
 * (тоесть просто в своем конструкторе не обратишся к переменной внутр класса(пока она еще не созданная)
 *
 * внутр класс также может что то наследовать, реализ интерфейсы
 * внутренний класс может иметь свой внутренний класс(это плозая практика)
 *
 */
public class InnerClasss {
    public static void main(String[] args) {
        Car car = new Car("red", 2, 150);
        System.out.println(car);

    }
}
